<?php
/**
 * Generated by the WordPress Meta Box Generator at http://goo.gl/8nwllb
 */
class Swe_Team_Repeater_Meta_Box {
	private $screens = array(
		'sweteammngent',
	);
	private $fields = array(
		array(
			'id' => 'team-social-icon',
			'label' => 'Team Social Icon',
			'type' => 'select',
			'options' => array(
				'Facebook',
				'Twitter',
				'Youtube',
				'Instagram',
				'LinkedIn',
				'Pinterest',
			),
		),
		array(
			'id' => 'team-social-link',
			'label' => 'Team Social Link',
			'type' => 'url',
		),
	);

	/**
	 * Class construct method. Adds actions to their respective WordPress hooks.
	 */
	public function __construct() {
		add_action( 'add_meta_boxes', array( $this, 'add_meta_boxes' ) );
		add_action( 'save_post', array( $this, 'save_post' ) );
	}

	/**
	 * Hooks into WordPress' add_meta_boxes function.
	 * Goes through screens (post types) and adds the meta box.
	 */
	public function add_meta_boxes() {
		foreach ( $this->screens as $screen ) {
			add_meta_box(
				'team-social',
				__( 'Team Social', 'swe_team_management' ),
				array( $this, 'add_meta_box_callback' ),
				$screen,
				'normal',
				'default'
			);
		}
	}

	/**
	 * Generates the HTML for the meta box
	 * 
	 * @param object $post WordPress post object
	 */
	public function add_meta_box_callback( $post ) {
		wp_nonce_field( 'team_social_data', 'team_social_nonce' );
		$this->generate_fields( $post );
	}

	/**
	 * Generates the field's HTML for the meta box.
	 */
	 
	public function generate_fields( $post ) {
		$output = '';
		$output .='<div class="swe-repeater-wrap">';
		$output .='<div class="swe-repeater-wrap-label"><label>Team Social </label></div>';
		$output .='<div class="swe-repeater-item-wraper">';
		
		$social_icon_val = get_post_meta( $post->ID, 'team_social_team-social-icon', true );
		$social_link_vals = get_post_meta( $post->ID, 'team_social_team-social-link', true);

		$count = 0;
		if(isset($social_link_vals) && is_array($social_link_vals) && !empty($social_link_vals) ) {
			foreach($social_link_vals as $social_link_val){	
				if(isset($social_link_val) && $social_link_val!=""){
				$output .='<div class="swe-repeater-item">';
				foreach ( $this->fields as $field ) {
					$label = '<label for="' . $field['id'] . '">' . $field['label'] . '</label>';
					$db_value = get_post_meta( $post->ID, 'team_social_' . $field['id'], true );
					
					switch ( $field['type'] ) {
						case 'select':
							$input = sprintf(
								'<select id="%s" name="team-social-icon[]">',
								$field['id']
							);
							foreach ( $field['options'] as $key => $value ) {
								$field_value = !is_numeric( $key ) ? $key : $value;
								$input .= sprintf(
									'<option %s value="%s">%s</option>',
									$social_icon_val[$count] === $field_value ? 'selected' : '',
									$social_icon_val[$count],
									$social_icon_val[$count]
								);
							}
							$input .= '</select>';
							break;
						default:
							$input = sprintf(
								'<input %s id="%s" name="team-social-link[]" type="%s" value="%s">',
								$field['type'] !== 'color' ? 'class="regular-text"' : '',
								$field['id'],
								$field['type'],
								$social_link_val
							);
					}
					$output .= $this->row_format( $label, $input );
				}
				
				$output .= '<div class="swe_repeater_helper">
						<span class="dashicons dashicons-move swe_rearange_social"></span>
						<span class="dashicons dashicons-no-alt swe_remove_social"></span>
						</div>
						</div>';
		$count++;				
		}
			}
		}else{
			
			$output .='<div class="swe-repeater-item">';
			foreach ( $this->fields as $field ) {
					$label = '<label for="' . $field['id'] . '">' . $field['label'] . '</label>';
					$db_value = get_post_meta( $post->ID, 'team_social_' . $field['id'], true );
					
					switch ( $field['type'] ) {
						case 'select':
							$input = sprintf(
								'<select id="%s" name="team-social-icon[]">',
								$field['id']
							);
							foreach ( $field['options'] as $key => $value ) {
								$field_value = !is_numeric( $key ) ? $key : $value;
								$input .= sprintf(
									'<option %s value="%s">%s</option>',
									$db_value === $field_value ? 'selected' : '',
									$field_value,
									$field_value
								);
							}
							$input .= '</select>';
							break;
						default:
							$input = sprintf(
								'<input %s id="%s" name="team-social-link[]" type="%s" value="%s">',
								$field['type'] !== 'color' ? 'class="regular-text"' : '',
								$field['id'],
								$field['type'],
								$db_value
							);
					}
				$output .= $this->row_format( $label, $input );
				}
				
				$output .= '<div class="swe_repeater_helper">
						<span class="dashicons dashicons-move swe_rearange_social"></span>
						<span class="dashicons dashicons-no-alt swe_remove_social"></span>
						</div>
						</div>';
			
		}
		
		$output .='</div>';	
		$output .='<a id="swe-repeater-add" class="button button-primary swe-repeater-add"><span class="dashicons dashicons-plus-alt"></span></a></div>';
		echo '<div class="swe-repeater-wrapper">' . $output . '</div>';
	}

	/**
	 * Generates the HTML for table rows.
	 */
	public function row_format( $label, $input ) {
		return sprintf(
			'<div class="swe_team_social_repeater_field">%s</div>',
			$input
		);
	}
	/**
	 * Hooks into WordPress' save_post function
	 */
	public function save_post( $post_id ) {
		if ( ! isset( $_POST['team_social_nonce'] ) )
			return $post_id;

		$nonce = $_POST['team_social_nonce'];
		if ( !wp_verify_nonce( $nonce, 'team_social_data' ) )
			return $post_id;

		if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )
			return $post_id;

		foreach ( $this->fields as $field ) {
			if ( isset( $_POST[ $field['id'] ] ) ) {
				switch ( $field['type'] ) {
					case 'email':
						$_POST[ $field['id'] ] = sanitize_email( $_POST[ $field['id'] ] );
						break;
					case 'text':
						$_POST[ $field['id'] ] = sanitize_text_field( $_POST[ $field['id'] ] );
						break;
				}
				update_post_meta( $post_id, 'team_social_' . $field['id'], $_POST[ $field['id'] ] );
			} else if ( $field['type'] === 'checkbox' ) {
				update_post_meta( $post_id, 'team_social_' . $field['id'], '0' );
			}
		}
	}

	
}
new Swe_Team_Repeater_Meta_Box;